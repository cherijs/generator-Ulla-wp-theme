// Rem output with px fallback
@mixin font-size($sizeValue: 1.6) {
  font-size: $sizeValue * 10 + px;
  font-size: $sizeValue + rem;
}

@mixin line-height($sizeValue: 1.6) {
  line-height: $sizeValue * 10 + px;
  line-height: $sizeValue + rem;
}

// Center block
@mixin center-block {
  display: block;
  margin: 0 auto;
}

@mixin borderbox {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

@mixin resetkit {
  -webkit-appearance: none;
  appearance: none;
}

@mixin translatez {
  -webkit-transform: translatez(0);
  -moz-transform: translatez(0);
  -ms-transform: translatez(0);
  -o-transform: translatez(0);
  transform: translatez(0);
}

@mixin smooth {
  -webkit-font-smoothing: antialiased;
  font-smoothing: antialiased;
}

@mixin subpixel {
  -webkit-font-smoothing: subpixel-antialiased;
  font-smoothing: subpixel-antialiased;
}

@mixin disableselect {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

@mixin resettap {
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  -webkit-tap-highlight-color: transparent;
}

@mixin mp0 {
  margin: 0;
  padding: 0;
}

@mixin hide-text {
  font: 0 / 0 a;
  text-shadow: none;
  color: transparent;
}

@mixin mobilefix {
  @include respond(all-phones) {
    &:before, &:after {
      content: " ";
      display: table;
    }
    &:after {
      clear: both;
    }
    &:last-child {
      float: none;
    }
  }
}

// Clearfix
@mixin clearfix {
  *zoom: 1;
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

// Clear after (not all clearfix need this also)
@mixin clearfix-after {
  clear: both;
}

@mixin respond($media) {
  @media #{$media} {
    @content;
  }
}

@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3), (-o-min-device-pixel-ratio: 2.6 / 2), (-webkit-min-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx) {
    background-image: url($image);
    background-size: $width $height;
  }
}

@mixin abs-pos($top: auto, $right: auto, $bottom: auto, $left: auto) {
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
  position: absolute;
}

@mixin animation($animate...) {
  $max: length($animate);
  $animations: "";
  @for $i from 1 through $max {
    $animations: #{$animations + nth($animate, $i)};
    @if $i < $max {
      $animations: #{$animations + ", "};
    }
  }
  -webkit-animation: $animations;
  -moz-animation: $animations;
  -o-animation: $animations;
  animation: $animations;
}

@mixin keyframes($animationName) {
  @-webkit-keyframes #{$animationName} {
    @content;
  }

  @-moz-keyframes #{$animationName} {
    @content;
  }

  @-o-keyframes #{$animationName} {
    @content;
  }

  @keyframes #{$animationName} {
    @content;
  }
}